    접근 제한 모드의 상속(메소드)
        private 메소드는 필드와 마찬가지로 상속되지 않아 자식 클래스에서 접근이 허용되지 않는다.

        부모로부터 상속받은 메소드를 재정의(메소드 오버라이딩) 하는 경우 상속받은 접근 제한 모드의 확장은 가능하지만 축소는 허용되지 않는다.

    인터페이스 구현
        인터페이스는 자주 사용되는 메소드 구성 패턴을 클래스 정의 시 매크로 개념과 유사하게 끼워넣기 용도로 활용한다.
        상속과는 관계없고, 약속된 메소드 묶음을 클래스에 빠짐없이 삽입하여 구현한다는 의미.

        인터페이스는 몸체가 없는 빈 멤버 메소드들의 구성 틀만을 정의할 뿐이다. 부모-자식 관계 등 상속 개념과는 전혀 무관하다.
        
        즉 인터페이스는 클래스의 코딩을 돕고 가독성을 높이며, 여러 개발자들 사이의 의사소통 목적 용으로 사용된다.

        인터페이스 메소드들이 접근 제한 모드는 명시하지 않더라도 모두 public으로 간주 되므로 클래스에 구현 시에는 모두 public으로 명시해야 한다.

    추상 클래스 상속
        추상 클래스는 오로지 상속의 대상으로만 활용된다.

        추상 클래스 및 추상 메소드의 목적은 인터페이스와 동일하지만, 상속에 따른 부모-자식 간의 제반 규칙이 유지되고, 추상 메소드 외에 필드 및 일반 메소드를 가질 수 있다는 점에서 다르다.

        자식 클래스는 부모 클래스 하나를 상속하면서 동시에 여러 개의 인터페이스를 구현 할 수 있다.
        즉 인터페이스는 다중 상속 효과를 제공한다.

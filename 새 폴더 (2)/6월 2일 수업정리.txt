스레드 개념
하나의 프로그램에서 여러 개의 독립된 처리를 할 수 있다.

main에서 시작해서 Jframe 객체를 생성한 다음 종료했지만, 전체 프로그램은 끝나지 않고 GUI 상태에서 여전히 활동하고 있다.

Jframe 객체를 생성하는 순간 이 프로그램은 원래의 main 실행줄기와 Jframe을 관리하는 또 다른 실행 줄기 등 두 개의 실행 줄기가 각각 독립적으로 활동한다.

이와 같이 독립적인 실행 줄기를 스레드라 부른다. 

프로그래머는 처음 시작한 프로그램 안에서 얼마든지 여러 개의 스레드를 출발시킬 수 있다.

처음 시작한 프로그램은 활동 중인 스레드가 하나라도 있으면 종료하지 않는다.

System.exit()는 모든 스레드를 끝내고 프로그램 전체를 종료하겠다는 의미이다.

스레드는 Jframe과 같이 어느 내장 클래스 객체 내에서 묵시적으로 출발할 수도 있고, 프로그래머가 명시적으로 출발시킬 수도 있다.


Jframe 스레드 종료(dispose())
프로그램 전체가 아닌, 특정 스레드만 종료시킬 수 있다.

프로그램에서 end 버튼 클릭때, System.exit() 대신 frame.dispose()를 사용한다면, 해당 Jframe 관리 스레드만 GUI와 함께 소멸하고,
main 스레드는 여전히 남아 프로그램이 종료하지 않는다.


다중 JFrame(다중 스레드)

하나의 프로그램으로 여러 개의 프레임을 운영할 수 있다.

main 스레드는 프레임 객체 두 개를 생성하여 각각을 위한 스레드가 실행하도록 하고 각 프레임에게 서로 상대방의 판넬을 알려준다음 종료한다.

어느 한쪽의 send 버튼이 눌리면 자신의 판넬에서 이미지 라벨을 제거하고 상대방의 판넬에 올려준다.

이런 프로그램을 두 개의 독립된 GUI 프로그램으로 구현하기는 매우 어렵다.

그러나, 스레드들은 한 프로그램 안에서 서로의 정보를 공유할 수 있다.


스레드 생성('Thread 클래스')
프레임 객체에 의한 묵시적 스레드 생성과 달리 명시적 스레드 생성이 가능하다.

Thread 클래스를 상속받아, 해당 스레드에서 처리할내용을 run 메소드에 구현한다.

Thread 클래스 객체를 생성한후 start() 메소드를 호출하면 내부적으로 새로운 실행 줄기(스레드)가 run함수부터 실행을 시작하고, main 스레드는 복귀한다.


스레드 생성('Runnalbe'인터페이스)
Thread클래스 상속이 어려운 경ㅇ에는 Runnalbe 인터페이스를 활용한다.

Runnalbe 인터페이스의 run 메소드에 스레드가 처리할 내용을 구현한다.

Thread 클래스 객체 생성시 Runnalbe 인터페이스 객체를 넣어준 후 각 Thread 객체의 start 메소드를 호출해주면 스레드들이 병렬로 실행한다.

main 스레드는 join으로 생성했던 모든 스레드가 종료할 때까지 기다린다.


스레드 접근 동기화('synchronized')
병렬 스레드들이 공유 변수에 대하여 접근 경쟁을 벌이면 이를 통제해야 한다.

스레드의 활용은 전형적으로 생산자(producer)-소비자(consumer) 모형으로 이룽어진다.

소비자 consumer 스레드는 주어진 Mailbox에서 메일을 꺼내고 보관함을 비운다.
단, 보관함이 비어있으면 채워질 때까지 wait()에서 기다린다.
이 기다림은 생산자가 메일을 넣고 깨우는 notify에 의해 깨어난다.

wait에서 기다리는 스레드가 없다면 notify의 깨우는 일은 내부적으로 무시된다.

하나의 소비자 스레드와 두 개의 생성자 스레드가 동일한 Mailbox를 사용한다.

Mailbox의 메일 함 mail필드(변수)에 세 스레드가 예츨 불허 순서로 접근한다.

이 때, 질서 없는 접근을 그대로 허용하면 올바른 메일 처리가 되지 않는다.

한 스레드씩 질서있게 접근시키기 위해 접근 메소드 두 개에 "synchronized"를 붙인다.

synchronized 메소드들은 전체적으로 딱 하나의 문에 달려있고, 꼭 하나의 스레드만이 통과하여 실해할 수 있다. 나머지 스레드들은 기다리다가 먼저 들어가 스레드가 리턴하거나
wait에 의해 대기 상태가 되면 동일한 방법으로 하나씩 들어갈 수 있다.

이와 같은 개념을 동기화('synchronized')라 부르고 이런 장치를 모니터라 부른다.
